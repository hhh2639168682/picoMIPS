// sample picoMIPS program 1
// n = 8 bits, Isize = 20 bits
// format: 4b opcode, 5b %d, 5b %s, 8b immediate or address
// 
// HEX /////////// BINARY  ///////////////////// ASSEMBLER /////////

// CLEAR regs/////////
11000     // 20'b0001_0001_0000_00000000; //ADDI  0 //CLEAR %1
12000     // 20'b0001_0010_0000_00000000; //ADDI  0 //CLEAR %2
13000     // 20'b0001_0011_0000_00000000; //ADDI  0 //CLEAR %3
14000     // 20'b0001_0100_0000_00000000; //ADDI  0 //CLEAR %4
15000     // 20'b0001_0101_0000_00000000; //ADDI  0 //CLEAR %5
16000     // 20'b0001_0110_0000_00000000; //ADDI  0 //CLEAR %6
17000     // 20'b0001_0111_0000_00000000; //ADDI  0 //CLEAR %7
18000     // 20'b0001_1000_0000_00000000; //ADDI  0 //CLEAR %8
19000     // 20'b0001_1001_0000_00000000; //ADDI  0 //CLEAR %9

// CLEAR regs/////////


// input /////////
40089     // 20'b0100_0000_0000_10001001; //HOLD 1 PC=9
0118A	  // 20'b0000_0001_0001_10001010; //ADD  %1; %1 = input Re_w  pc=10
4000B     // 20'b0100_0000_0000_00001011; //HOLD 0 PC=11
4008C     // 20'b0100_0000_0000_10001100; //HOLD 1 PC=12
02280	  // 20'b0000_0010_0010_10000000; //ADD  %2; %2 = input Im_w pc=13
4000E     // 20'b0100_0000_0000_00001110; //HOLD 0 PC=14
4008F     // 20'b0100_0000_0000_10001111; //HOLD 1 PC=15

03380	  // 20'b0000_0011_0011_10000000; //ADD  %3; %3 = input Re_b pc=16
40011     // 20'b0100_0000_0000_00010001; //HOLD 0 PC=17
40092     // 20'b0100_0000_0000_10010010; //HOLD 1 PC=18
04480	  // 20'b0000_0100_0100_10000000; //ADD  %4; %4 = input Im_b pc=19
40014     // 20'b0100_0000_0000_00010100; //HOLD 0 PC=20
40095     // 20'b0100_0000_0000_10010101; //HOLD 1 PC=21
05580	  // 20'b0000_0101_0101_10000000; //ADD  %5; %5 = input Re_a pc=22
40017     // 20'b0100_0000_0000_00010111; //HOLD 0 PC=23
40098     // 20'b0100_0000_0000_10011000; //HOLD 1 PC=24
06680	  // 20'b0000_0110_0110_10000000; //ADD  %6; %6 = input Im_a pc=25
07300	  // 20'b0000_0111_0011_00000000; //ADD  %7 %3  %7=Re_b   PC=26
08400	  // 20'b0000_1000_0100_00000000; //ADD  %8 %4  %8=Im_b   PC=27

23180	  // 20'b0010_0011_0001_10000000; //MUL  %3 %1  =  Re_w*Re_b PC=28//-0
24280	  // 20'b0010_0100_0010_10000000; //MUL  %4 %2  =  Im_w*Im_b PC=29//-0.75
27280	  // 20'b0010_0111_0010_10000000; //MUL  %7 %2  =  Re_b*Im_w PC=30//-0.75
28180	  // 20'b0010_1000_0001_10000000; //MUL  %8 %1  =  Re_w*Im_b PC=31//-0.75

07800     // 20'b0000_0111_1000_00000000; //ADD  %7 %8  =  Re_b*Im_w+Re_w*Im_b PC=32              
33400	  // 20'b0011_0011_0100_00000000; //SUB  %3 %4  =  Re_w*Re_b-Im_w*Im_b  PC=33

                                        
14000     // 20'b0001_0100_0000_00000000; //ADDI  0 //CLEAR %4  PC=34
04500	  // 20'b0000_0100_0101_00000000; //ADD  %4 %5  =  %4=Re_a  PC=35
05300	  // 20'b0000_0101_0011_00000000; //ADD  %5 %3  =  Re_y=Re_a+(Re_w*Re_b-Im_w*Im_b) PC=36
45025	  // 20'b0100_0101_0000_00100101; //HOLD 0 PC=37
450A6	  // 20'b0100_0101_0000_10100110; //HOLD 1 %5 PC=38  show 
15000     // 20'b0001_0101_0000_00000000; //ADDI 0 //CLEAR %5  PC=39
05600	  // 20'b0000_0101_0110_00000000; //ADD  %5 %6  =  %5=Im_a PC=40
06700	  // 20'b0000_0110_0111_00000000; //ADD  %6 %7  =  Im_y=Im_a+(Re_b*Im_w+Re_w*Im_b) PC=41
4602A	  // 20'b0100_0110_0000_00101010; //HOLD 0 %6 PC=42
460AB	  // 20'b0100_0110_0000_10101011; //HOLD 1 %6 PC=43  show 
34300	  // 20'b0011_0100_0011_00000000; //SUB  %4 %3  =  Re_z=Re_a-(Re_w*Re_b-Im_w*Im_b) PC=44
4402D	  // 20'b0100_0100_0000_00101101; //HOLD 0 %4 PC=45
440AE	  // 20'b0100_0100_0000_10101110; //HOLD 1 %4 PC=46
35700	  // 20'b0011_0101_0111_00000000; //SUB  %5 %7  =  Im_z=Im_a-(Re_b*Im_w+Re_w*Im_b) PC=47
45030	  // 20'b0100_0101_0000_00110000; //HOLD 0 %5 PC=48                                                                  
4508F	  // 20'b0100_0101_0000_10001111; //HOLD 1 %5 PC=49



